{"version":3,"file":"result-upload.min.js","sources":["../src/result-upload.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nconst sendResultToDatabase = async (answer, result) => {\n    const container = document.querySelector('.data-container');\n    if(!container) {\n        console.log('container not found !');\n    }\n    const questionId = container.getAttribute('question-id-param');\n\n    const moodleReq = await fetch(`${M.cfg.wwwroot}/question/type/logic/ajax.php?question_id=${encodeURIComponent(questionId)}&answer=${encodeURIComponent(answer)}&result=${encodeURIComponent(result)}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'X-Requested-With': 'XMLHttpRequest'\n        },\n        credentials: 'same-origin' // Ensures Moodle session cookie is sent\n    });\n\n    if(!moodleReq.ok) {\n        throw new Error('Did not work');\n    } else {\n        console.log('Request worked.');\n    }\n};\n\nexport const init = () => {\n    window.sendResultToDatabase = sendResultToDatabase;\n    window.addEventListener(\"send-result\", () => {\n        // TODO pass the params and call the sendResult function\n    })\n};\n\n"],"names":["sendResultToDatabase","async","answer","result","container","document","querySelector","console","log","questionId","getAttribute","fetch","M","cfg","wwwroot","encodeURIComponent","method","headers","credentials","ok","Error","window","addEventListener"],"mappings":"sJAeMA,qBAAuBC,MAAOC,OAAQC,gBAClCC,UAAYC,SAASC,cAAc,mBACrCF,WACAG,QAAQC,IAAI,+BAEVC,WAAaL,UAAUM,aAAa,gCAElBC,gBAASC,EAAEC,IAAIC,6DAAoDC,mBAAmBN,+BAAsBM,mBAAmBb,2BAAkBa,mBAAmBZ,SAAW,CACnMa,OAAQ,OACRC,QAAS,gBACW,sCACI,kBAExBC,YAAa,iBAGHC,SACJ,IAAIC,MAAM,gBAEhBb,QAAQC,IAAI,kCAIA,KAChBa,OAAOrB,qBAAuBA,qBAC9BqB,OAAOC,iBAAiB,eAAe"}