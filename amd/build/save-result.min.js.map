{"version":3,"file":"save-result.min.js","sources":["../src/save-result.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Saves the logic editor state on form submission.\n *\n * @module     qtype_logic/save-result\n * @copyright  2025 YOUR NAME <your@email.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery'], function($) {\n    return {\n        init: function() {\n            const nextNavButton = $('input[type=\"submit\"]#mod_quiz-next-nav.btn');\n\n            const testResultsInput = $('input#test-results');\n            const testResults = testResultsInput.data('test-results');\n            if(testResults === undefined || testResults.length === 0) {\n                nextNavButton.prop('disabled', true);\n            }\n\n            const runTestButton = $('button#circuit-run-test-button');\n\n            runTestButton.on('click', async (_event) => {\n                try {\n                    const logicEditor = $('logic-editor#logic-editor')[0];\n\n                    const userAnswer = logicEditor.save();\n                    const testCases = userAnswer.tests[0];\n                    console.log(logicEditor);\n                    console.log(userAnswer);\n                    console.log(testCases);\n                    const testResults = await logicEditor.runTestSuite(testCases, { noUI: true });\n                    const testResultsString = JSON.stringify(testResults);\n                    console.log(testResults)\n\n                    const userAnswerString = JSON.stringify(userAnswer);\n\n                    // Update the input value here\n                    $('input#answer').attr('value', userAnswerString);\n                    $('input#test-results').attr('value', testResultsString);\n                } catch(error) {\n                    console.error(error);\n                }\n\n                nextNavButton.prop('disabled', false);\n            });\n\n            const resetButton = $('button#circuit-reset-button');\n\n            resetButton.on('click', (_event) => {\n                const initState = resetButton.data('init-state');\n                const logicEditor = $('logic-editor#logic-editor')[0];\n\n                logicEditor.loadCircuitOrLibrary(initState);\n            });\n        }\n    };\n});\n"],"names":["define","$","init","nextNavButton","testResults","data","undefined","length","prop","on","async","logicEditor","userAnswer","save","testCases","tests","console","log","runTestSuite","noUI","testResultsString","JSON","stringify","userAnswerString","attr","error","resetButton","_event","initState","loadCircuitOrLibrary"],"mappings":";;;;;;;AAsBAA,iCAAO,CAAC,WAAW,SAASC,SACjB,CACHC,KAAM,iBACIC,cAAgBF,EAAE,8CAGlBG,YADmBH,EAAE,sBACUI,KAAK,qBACvBC,IAAhBF,aAAoD,IAAvBA,YAAYG,QACxCJ,cAAcK,KAAK,YAAY,GAGbP,EAAE,kCAEVQ,GAAG,SAASC,MAAAA,mBAEZC,YAAcV,EAAE,6BAA6B,GAE7CW,WAAaD,YAAYE,OACzBC,UAAYF,WAAWG,MAAM,GACnCC,QAAQC,IAAIN,aACZK,QAAQC,IAAIL,YACZI,QAAQC,IAAIH,iBACNV,kBAAoBO,YAAYO,aAAaJ,UAAW,CAAEK,MAAM,IAChEC,kBAAoBC,KAAKC,UAAUlB,aACzCY,QAAQC,IAAIb,mBAENmB,iBAAmBF,KAAKC,UAAUV,YAGxCX,EAAE,gBAAgBuB,KAAK,QAASD,kBAChCtB,EAAE,sBAAsBuB,KAAK,QAASJ,mBACxC,MAAMK,OACJT,QAAQS,MAAMA,OAGlBtB,cAAcK,KAAK,YAAY,YAG7BkB,YAAczB,EAAE,+BAEtByB,YAAYjB,GAAG,SAAUkB,eACfC,UAAYF,YAAYrB,KAAK,cACfJ,EAAE,6BAA6B,GAEvC4B,qBAAqBD"}