{"version":3,"file":"save-result.min.js","sources":["../src/save-result.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Saves the logic editor state on form submission.\n *\n * @module     qtype_logic/save-result\n * @copyright  2025 YOUR NAME <your@email.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery'], function($) {\n    return {\n        init: function() {\n            // Remove this as soon as the autosave to session storage is deactivated in the logic editor\n            sessionStorage.clear('logic/logic-editor');\n\n            const nextNavButton = $('input[type=\"submit\"]#mod_quiz-next-nav.btn');\n            const resultNotUploadedIcon = $('i#result_not_uploaded');\n            const newResultUploadedIcon = $('i#new_result_uploaded');\n\n            const testResultsInput = $('input#test-results');\n            const testResults = testResultsInput.attr('value');\n\n            console.log(testResults);\n\n            // Block quiz progression until the user submits a result\n            if(testResults === undefined || testResults.length === 0) {\n                nextNavButton.prop('disabled', true);\n                resultNotUploadedIcon.css('display', 'block');\n                newResultUploadedIcon.css('display', 'none');\n            } else {\n                nextNavButton.prop('disabled', false);\n                resultNotUploadedIcon.css('display', 'none');\n                newResultUploadedIcon.css('display', 'block');\n            }\n\n            const runTestButton = $('button#circuit-run-test-button');\n\n            runTestButton.on('click', async (_event) => {\n                try {\n                    const logicEditor = $('logic-editor#logic-editor')[0];\n\n                    const userAnswer = logicEditor.save();\n                    const userAnswerString = JSON.stringify(userAnswer);\n                    const testCases = userAnswer.tests[0];\n                    const testResults = await logicEditor.runTestSuite(testCases, { noUI: true });\n                    const testResultsString = JSON.stringify(testResults);\n\n                    console.log(logicEditor);\n                    console.log(userAnswer);\n                    console.log(testCases);\n                    console.log(testResults)\n\n                    // Update the input value here\n                    $('input#answer').attr('value', userAnswerString);\n                    $('input#test-results').attr('value', testResultsString);\n                } catch(error) {\n                    console.error(error);\n                }\n\n                nextNavButton.prop('disabled', false);\n                resultNotUploadedIcon.css('display', 'none');\n                newResultUploadedIcon.css('display', 'block');\n            });\n\n            const resetButton = $('button#circuit-reset-button');\n\n            resetButton.on('click', (_event) => {\n                const initState = resetButton.data('init-state');\n                const logicEditor = $('logic-editor#logic-editor')[0];\n\n                logicEditor.loadCircuitOrLibrary(initState);\n            });\n        }\n    };\n});\n"],"names":["define","$","init","sessionStorage","clear","nextNavButton","resultNotUploadedIcon","newResultUploadedIcon","testResults","attr","console","log","undefined","length","prop","css","on","async","logicEditor","userAnswer","save","userAnswerString","JSON","stringify","testCases","tests","runTestSuite","noUI","testResultsString","error","resetButton","_event","initState","data","loadCircuitOrLibrary"],"mappings":";;;;;;;AAsBAA,iCAAO,CAAC,WAAW,SAASC,SACjB,CACHC,KAAM,WAEFC,eAAeC,MAAM,4BAEfC,cAAgBJ,EAAE,8CAClBK,sBAAwBL,EAAE,yBAC1BM,sBAAwBN,EAAE,yBAG1BO,YADmBP,EAAE,sBACUQ,KAAK,SAE1CC,QAAQC,IAAIH,kBAGOI,IAAhBJ,aAAoD,IAAvBA,YAAYK,QACxCR,cAAcS,KAAK,YAAY,GAC/BR,sBAAsBS,IAAI,UAAW,SACrCR,sBAAsBQ,IAAI,UAAW,UAErCV,cAAcS,KAAK,YAAY,GAC/BR,sBAAsBS,IAAI,UAAW,QACrCR,sBAAsBQ,IAAI,UAAW,UAGnBd,EAAE,kCAEVe,GAAG,SAASC,MAAAA,mBAEZC,YAAcjB,EAAE,6BAA6B,GAE7CkB,WAAaD,YAAYE,OACzBC,iBAAmBC,KAAKC,UAAUJ,YAClCK,UAAYL,WAAWM,MAAM,GAC7BjB,kBAAoBU,YAAYQ,aAAaF,UAAW,CAAEG,MAAM,IAChEC,kBAAoBN,KAAKC,UAAUf,aAEzCE,QAAQC,IAAIO,aACZR,QAAQC,IAAIQ,YACZT,QAAQC,IAAIa,WACZd,QAAQC,IAAIH,aAGZP,EAAE,gBAAgBQ,KAAK,QAASY,kBAChCpB,EAAE,sBAAsBQ,KAAK,QAASmB,mBACxC,MAAMC,OACJnB,QAAQmB,MAAMA,OAGlBxB,cAAcS,KAAK,YAAY,GAC/BR,sBAAsBS,IAAI,UAAW,QACrCR,sBAAsBQ,IAAI,UAAW,kBAGnCe,YAAc7B,EAAE,+BAEtB6B,YAAYd,GAAG,SAAUe,eACfC,UAAYF,YAAYG,KAAK,cACfhC,EAAE,6BAA6B,GAEvCiC,qBAAqBF"}